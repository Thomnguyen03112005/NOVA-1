import os
import sys
import hashlib
import json
import time
import datetime
import uuid
import platform
import requests
import socket
import config  # file config.py c·ªßa b·∫°n
import subprocess
import contextlib
import io

def get_cpu_id():
    """
    L·∫•y CPU ID tr√™n Windows b·∫±ng l·ªánh wmic.
    N·∫øu kh√¥ng ph·∫£i Windows ho·∫∑c l·ªói th√¨ tr·∫£ v·ªÅ m√£ m·∫∑c ƒë·ªãnh.
    """
    if platform.system() != "Windows":
        return "BFEBFBFF000306C3"  # m√£ gi·∫£ ƒë·ªãnh n·∫øu kh√¥ng ph·∫£i Windows
    
    try:
        output = subprocess.check_output("wmic cpu get ProcessorId", shell=True, text=True)
        lines = output.strip().split("\n")
        if len(lines) >= 2:
            cpu_id = lines[1].strip()
            if cpu_id:
                return cpu_id
    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói l·∫•y CPU ID: {e}")
    return "BFEBFBFF000306C3"  # fallback

def get_mac_address():
    """
    L·∫•y ƒë·ªãa ch·ªâ MAC h·ª£p l·ªá ƒë·∫ßu ti√™n
    """
    mac = None
    for interface in socket.if_nameindex():
        try:
            mac = ':'.join(['{:02x}'.format((uuid.getnode() >> ele) & 0xff)
                           for ele in range(0,8*6,8)][::-1])
            if mac and mac != "00:00:00:00:00:00":
                break
        except:
            continue
    if not mac:
        mac = "FCAA14DA4010"
    return mac.replace(":", "").upper()

def hash_sha256(data):
    return hashlib.sha256(data.encode("utf-8")).hexdigest()

def send_discord_webhook(cpu_id, mac, cpu_hash, mac_hash):
    # G·ª≠i th√¥ng tin format ƒë·∫πp, c√≥ d·∫•u . ·ªü ƒë·∫ßu cu·ªëi m·ªói d√≤ng ƒë·ªÉ d·ªÖ ph√¢n bi·ªát
    content = (
        "----------------------------------------\n"
        "üì• **Y√™u c·∫ßu duy·ªát m√£ bƒÉm m·ªõi**\n"
        f"CPU ID:\n{cpu_id}.\n"
        f"MAC Address:\n{mac}.\n"
        f"Hash CPU:\n{cpu_hash}.\n"
        f"Hash MAC:\n{mac_hash}.\n"
        "T·ª´ tool auto c√¢u c√° Python\n"
        "----------------------------------------"
    )
    data = {"content": content}
    try:
        r = requests.post(config.WEBHOOK_URL, json=data)
        if r.status_code in (200, 204):
            print("")  # Kh√¥ng hi·ªán g√¨
        else:
            print(f"‚ö†Ô∏è L·ªói g·ª≠i webhook: {r.status_code} {r.text}")
    except Exception as e:
        print(f"‚ö†Ô∏è L·ªói g·ª≠i webhook: {e}")

def check_hash_approved(cpu_hash, mac_hash):
    try:
        r = requests.get(config.KEY_JSON_URL, timeout=10)
        r.raise_for_status()
        keys = r.json()  # JSON d·∫°ng list
    except Exception as e:
        print(f"‚ùå L·ªói t·∫£i danh s√°ch key: {e}")
        return False

    # Ch·∫Øc ch·∫Øn keys l√† list
    if not isinstance(keys, list):
        print("‚ùå D·ªØ li·ªáu key kh√¥ng h·ª£p l·ªá (kh√¥ng ph·∫£i list).")
        return False

    # So s√°nh hash CPU ho·∫∑c MAC trong keys
    for k in keys:
        code_hash = k.get("code", "").lower()
        if cpu_hash.lower() == code_hash or mac_hash.lower() == code_hash:
            return True
    return False

def main_check():
    print("üîç Ki·ªÉm tra hash CPU v√† MAC, g·ª≠i th√¥ng tin thi·∫øt b·ªã qua Discord...")

    cpu_id = get_cpu_id()
    mac = get_mac_address()
    cpu_hash = hash_sha256(cpu_id)
    mac_hash = hash_sha256(mac)

    send_discord_webhook(cpu_id, mac, cpu_hash, mac_hash)

    if not check_hash_approved(cpu_hash, mac_hash):
        print("‚ùå B·∫°n ch∆∞a ƒë∆∞·ª£c duy·ªát s·ª≠ d·ª•ng tool, vui l√≤ng li√™n h·ªá Admin.")
        print("üëâ Discord h·ªó tr·ª£: https://discord.gg/y4CSXVsQuD")
        print("üëâ Tiktok: https://www.tiktok.com/@thowmm2005")
        print("\n... Vui l√≤ng ƒë√≥ng tool th·ªß c√¥ng khi b·∫°n s·∫µn s√†ng ...\n")
        # Kh√¥ng t·ª± exit ƒë·ªÉ ng∆∞·ªùi d√πng ch·ªß ƒë·ªông ƒë√≥ng
        while True:
            time.sleep(60)  # gi·ªØ ch∆∞∆°ng tr√¨nh ch·∫°y ch·ªù ng∆∞·ªùi d√πng tho√°t
    else:
        print("‚úÖ B·∫°n ƒë√£ ƒë∆∞·ª£c duy·ªát s·ª≠ d·ª•ng tool. Ti·∫øp t·ª•c ch·∫°y ch·ª©c nƒÉng...")

if __name__ == "__main__":
    # Ch·∫∑n th√¥ng b√°o khi import pygame (gi·∫£m th√¥ng b√°o khi init mixer)
    import pygame
    f = io.StringIO()
    with contextlib.redirect_stdout(f), contextlib.redirect_stderr(f):
        pygame.mixer.pre_init(44100, -16, 2, 512)
        pygame.mixer.init()

    main_check()

    # Sau khi check ok, import v√† ch·∫°y ph·∫ßn tool c√¢u c√° c·ªßa b·∫°n (test6.py)
    import test6  # ch·∫Øc ch·∫Øn c√≥ file test6.py trong c√πng th∆∞ m·ª•c
